openshift.withCluster() {
  env.APP_NAME = "${APP_NAME}"
  env.BUILD = openshift.project()
  env.DEV = "${DEV_PROJECT}"
  env.STAGE = "${STAGE_PROJECT}"
  echo "Starting Pipeline for ${APP_NAME}..."
}

pipeline {
  agent {
    label 'nodejs'
  }


  stages {
    stage('Git Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Unit Test') {

       steps {
         script {
           sh "node --version"
           sh "npm install"
           sh "npm test"
         }
       }
   }


    stage('Build Image') {
       
       steps {
         script {
            openshift.withCluster() {
              openshift.withProject(env.DEV_PROJECT) {
                openshift.selector("bc", "${APP_NAME}").startBuild("--from-file=.", "--wait=true")
              }
            }
         }
       }
   }


   stage('Deploy DEV') {
      steps {
         script {
            openshift.withCluster() {
              openshift.withProject(env.DEV_PROJECT) {
                openshift.selector("dc", "${APP_NAME}").rollout().latest();
              }
            }
        }
     }
   }

   stage('Promote to Stage') {
      steps {
          timeout(time:15, unit:'MINUTES') {
             input message: "Promote to STAGE?", ok: "Promote"
         }

         script {
            openshift.withCluster() {
                openshift.tag("${env.DEV_PROJECT}/tasks:latest", "${env.STAGE_PROJECT}/tasks:stage")
            }
        }
     }
   }


   stage('Deploy Stage') {
      steps {
         script {
            openshift.withCluster() {
              openshift.withProject(env.STAGE_PROJECT) {
                openshift.selector("dc", "${APP_NAME}").rollout().latest();
              }
            }
        }
     }
   }


  }
}

println "Application ${env.APP_NAME} is now in Production!"


